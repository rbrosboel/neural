{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 7d21efa19680e6a0dcc4","webpack:///./src/Matrix.js","webpack:///./src/ActivationFunctions.js","webpack:///./src/Layer.js","webpack:///./src/visual/LineGraph.js","webpack:///./node_modules/withCanvas/es/index.js","webpack:///./src/index.js","webpack:///./src/AsyncRunner.js","webpack:///./src/NeuralNetwork.js","webpack:///./src/visual/NetworkProgress.js","webpack:///./src/visual/NetworkFlowChart.js","webpack:///external {\"root\":\"mermaid\",\"commonjs2\":\"mermaid\",\"commonjs\":\"mermaid\",\"amd\":\"mermaid\"}","webpack:///./src/visual/TwoInOneOut.js"],"names":["root","factory","exports","module","require","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE_11__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Matrix","rows","cols","_this","data","arguments","length","undefined","_classCallCheck","concat","_toConsumableArray","Array","map","_","forEach","bind","a","Error","v","row","col","x","reduce","f","y","x1","x2","v1","carry","each","mapTwo","v2","sum","min","max","Math","random","value","str","toString","padEnd","join","padStart","toFixed","console","log","ActivationFunctions","_x","_y","_x2","exp","_y2","_x3","tanh","_y3","_x4","_y4","_x5","_y5","_x6","z","_z","_x7","sin","_z2","cos","_x8","_z3","Layer","previous","size","options","_ref","previousSize","_extends","activationFunction","weightRange","sqrt","weight","apply","weightTransposed","transpose","bias","clear","output","activation","error","derivative","gradientCount","weightGradientSum","biasGradientSum","activationFunctions","save","input","next","product","add","context","multiply","gradient","learningRate","weightGradient","avg","layer","load","_withCanvas","LineGraph","container","gridInterval","maxScaleX","autoMax","series","props","_withCanvas2","default","start","stop","draw","font","labelWidth","measureText","width","serie","color","datapoint","serieName","addSerie","push","canvas","shift","event","preventDefault","scale","deltaY","_ref2","clearRect","height","valueWidth","gridLineInterval","round","gridLines","strokeStyle","fillStyle","beginPath","moveTo","label","labelX","labelY","fillText","lineTo","stroke","serieIndex","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","keys","Symbol","iterator","done","labelPos","valuePos","linePos","err","return","__webpack_exports__","id","scene","document","getElementById","createElement","getContext","animationFrame","resize","_scene$options","offsetHeight","offsetWidth","ms","performance","now","delta","time","render","running","window","requestAnimationFrame","eventHandler","addEventListener","cancelAnimationFrame","constrain","minIn","maxIn","minOut","maxOut","init","appendChild","assign","target","source","key","AsyncRunner","NeuralNetwork","NetworkProgress","NetworkFlowChart","TwoInOneOut","net","auto","fps","progressInterval","frameInterval","iterations","loopTimeStart","loopTimeLast","loopStep","canStep","floor","step","loopProgress","training","testing","canStepContext","progressDeadline","onProgress","epochs","batchSize","layers","current","feedforward","samples","startContext","backpropagate","stepContext","endOfContext","ready","sample","sampleCount","sort","evaluation","batch","batchEvaluation","batchError","batchErrorSum","batchAccuracy","batchAccuracyCount","epoch","epochEvaluation","epochError","epochErrorSum","epochAccuracy","epochAccuracyCount","endOfBatch","endOfEpoch","onStart","subtract","onEvaluate","correct","adjust","onBatch","onEpoch","onComplete","_getLayers","getLayers","_getLayers2","_getLayers3","_LineGraph","statsContainer","graphContainer","graph","_net","format","trainingAccuracy","testingAccuracy","innerHTML","addDatapoint","_mermaid","verbose","renderSvg","svg","callback","mermaid","abs","substr","hex2","number","prefix","links","g","_net$getLayers","w","b","gw","gb","e","edge","node","mermaidAPI","replace","range","outputRange","minColor","maxColor","steps","screenSize","screenStepSize","_this2","screen","fillRect","result","predict","fromArray","toArray"],"mappings":"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","file":"neural.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"mermaid\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"mermaid\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"neural\"] = factory(require(\"mermaid\"));\n\telse\n\t\troot[\"neural\"] = factory(root[\"mermaid\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_11__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7d21efa19680e6a0dcc4","export default class Matrix {\r\n    constructor(rows, cols, data = null) {\r\n        this.rows = rows\r\n        this.cols = cols\r\n        this.data = data || [...Array(rows)].map(_ => [...Array(cols)].map(_ => 0))\r\n\r\n        const instanceMethods = [\r\n            'map',\r\n            'mapTwo',\r\n            'each',\r\n            'reduce',\r\n            'add',\r\n            'subtract',\r\n            'multiply',\r\n            'transpose',\r\n            'product',\r\n            'random',\r\n            'max',\r\n            'toArray',\r\n            'toString',\r\n            'p'\r\n        ].forEach(p => this[p] = Matrix[p].bind(null, this))\r\n    }\r\n\r\n    static load(data) {\r\n        if (data instanceof Matrix) {\r\n            return data\r\n        }\r\n        return new Matrix(data.rows, data.cols, data.data)\r\n    }\r\n\r\n    save() {\r\n        return {\r\n            rows: this.rows,\r\n            cols: this.cols,\r\n            data: this.data,\r\n        }\r\n    }\r\n\r\n    static fromArray(a, rows = 0, cols = 1) {\r\n        rows = rows || a.length\r\n        if (rows * cols != a.length) {\r\n            throw new Error('Invalid number of values: rows * cols != array.length')\r\n        }\r\n        return new Matrix(rows, cols).map((v, row, col) => a[row * cols + col % cols])\r\n    }\r\n\r\n    static toArray(x) {\r\n        return x.data.reduce((c, row) => c.concat(row), [])\r\n    }\r\n\r\n    static map(x, f) {\r\n        let y = new Matrix(x.rows, x.cols)\r\n        for (let row = 0; row < x.rows; row++) {\r\n            for (let col = 0; col < x.cols; col++) {\r\n                y.data[row][col] = f(x.data[row][col], row, col)\r\n            }\r\n        }\r\n        return y\r\n    }\r\n\r\n    static mapTwo(x1, x2, f) {\r\n        if (x2 instanceof Matrix && (x1.rows != x2.rows || x1.cols != x2.cols)) {\r\n            throw new Error('Shapes must be identical')\r\n        }\r\n\r\n        return x1.map((v1, row, col) => {\r\n            if (x2 instanceof Matrix) {\r\n                return f(v1, x2.data[row][col], row, col)\r\n            } else {\r\n                return f(v1, x2, row, col)\r\n            }\r\n        })\r\n    }\r\n\r\n    static each(x, f) {\r\n        for (let row = 0; row < x.rows; row++) {\r\n            for (let col = 0; col < x.cols; col++) {\r\n                f(x.data[row][col], row, col)\r\n            }\r\n        }\r\n        return x\r\n    }\r\n\r\n    static reduce(x, f, carry) {\r\n        Matrix.each(\r\n            x,\r\n            (v, row, col) => carry = f(carry, v, row, col)\r\n        )\r\n        return carry\r\n    }\r\n\r\n    static add(x1, x2) {\r\n        return Matrix.mapTwo(x1, x2, (v1, v2) => v1 + v2)\r\n    }\r\n\r\n    static subtract(x1, x2) {\r\n        return Matrix.mapTwo(x1, x2, (v1, v2) => v1 - v2)\r\n    }\r\n\r\n    static multiply(x1, x2) {\r\n        return Matrix.mapTwo(x1, x2, (v1, v2) => v1 * v2)\r\n    }\r\n\r\n    static transpose(x) {\r\n        const y = new Matrix(x.cols, x.rows)\r\n        x.each((v, row, col) => y.data[col][row] = v)\r\n        return y\r\n    }\r\n\r\n    static product(x1, x2) {\r\n        if (x1.cols != x2.rows) {\r\n            throw new Error('Columns in x1 must match rows in x2')\r\n        }\r\n\r\n        const y = new Matrix(x1.rows, x2.cols)\r\n        y.each((_, row, col) => {\r\n            let sum = 0\r\n            for (let i = 0; i < x1.cols; i++) {\r\n                sum += x1.data[row][i] * x2.data[i][col]\r\n            }\r\n            y.data[row][col] = sum\r\n        })\r\n        return y\r\n    }\r\n\r\n    static random(x, min = 0, max = 1) {\r\n        return x.map(() => min + Math.random() * (max - min))\r\n    }\r\n\r\n    static max(x) {\r\n        return x.reduce(\r\n            (c, value, row, col) => (!c || value > c.value) ? {value, row, col} : c,\r\n            null\r\n        )\r\n    }\r\n\r\n    static toString(x) {\r\n        let str = '      ' + [...Array(x.cols)].map((_, i) => i.toString().padEnd(9)).join('') + '\\n'\r\n        str += x.data.map(\r\n            (row, i) => i.toString().padStart(3) + row.map(col => col.toFixed(4).padStart(9)).join('')\r\n        ).join('\\n')\r\n        return str\r\n    }\r\n\r\n    static p(x, name = null) {\r\n        if (name) {\r\n            console.log(Matrix.toString(x), name)\r\n        } else {\r\n            console.log(Matrix.toString(x))\r\n        }\r\n        return x\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Matrix.js","/**\r\n * Activation functions and their derivatives\r\n * \r\n * x: f(x)\r\n * y: f'(f(x))\r\n * z: f'(x)\r\n * \r\n * https://en.wikipedia.org/wiki/Activation_function\r\n */\r\nexport default class ActivationFunctions {\r\n    static get identity() {\r\n        return {\r\n            x: x => x,\r\n            y: y => 1\r\n        }\r\n    }\r\n\r\n    static get sigmoid() {\r\n        return {\r\n            x: x => 1 / (1 + Math.exp(-x)),\r\n            y: y => y * (1 - y)\r\n        }\r\n    }\r\n\r\n    static get tanh() {\r\n        return {\r\n            x: x => Math.tanh(x),\r\n            y: y => 1 - (y * y)\r\n        }\r\n    }\r\n\r\n    static get relu() {\r\n        return {\r\n            x: x => x < 0 ? 0 : x,\r\n            y: y => y > 0 ? 1 : 0\r\n        }\r\n    }\r\n\r\n    static get leaky() {\r\n        return {\r\n            x: x => x < 0 ? 0.01 * x : x,\r\n            y: y => y > 0 ? 1 : 0.01\r\n        }\r\n    }\r\n\r\n    static get softplus() {\r\n        return {\r\n            x: x => Math.log(1 + Math.exp(x)),\r\n            z: z => 1 / (1 + Math.exp(-z))\r\n        }\r\n    }\r\n\r\n    static get sinusoid() {\r\n        return {\r\n            x: x => Math.sin(x),\r\n            z: z => Math.cos(z)\r\n        }\r\n    }\r\n\r\n    static get sinc() {\r\n        return {\r\n            x: x => x === 0 ? 1 : Math.sin(x) / x,\r\n            z: z => z === 0 ? 0 : Math.cos(z) / z - Math.sin(z) / (z * z)\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ActivationFunctions.js","import ActivationFunctions from './ActivationFunctions'\r\nimport Matrix from './Matrix'\r\n\r\n/**\r\n * Fully connected layer\r\n *\r\n * Forward/backward propagation\r\n */\r\nexport default class Layer {\r\n    constructor(previous, size, options) {\r\n        const previousSize = previous ? previous.size : 1\r\n        this.options = {\r\n            activationFunction: 'tanh',\r\n            weightRange: [-Math.sqrt(1.55/previousSize), Math.sqrt(1.55/previousSize)],\r\n            ...options,\r\n        }\r\n        this.size = size\r\n        this.weight = new Matrix(size, previousSize).random(\r\n            ...this.options.weightRange\r\n        )\r\n        this.weightTransposed = this.weight.transpose()\r\n        // this.bias = new Matrix(size, 1)\r\n        this.bias = new Matrix(size, 1)\r\n        this.clear()\r\n    }\r\n\r\n    clear() {\r\n        this.output = 0\r\n        this.activation = 0\r\n        this.error = 0\r\n        this.derivative = 0\r\n        this.gradientCount = 0\r\n        this.weightGradientSum = new Matrix(this.weight.rows, this.weight.cols)\r\n        this.biasGradientSum = new Matrix(this.bias.rows, this.bias.cols)\r\n        this.activationFunctions = ActivationFunctions[this.options.activationFunction]\r\n        return this\r\n    }\r\n\r\n    static load(data) {\r\n        if (data instanceof Layer) {\r\n            return data\r\n        }\r\n        const layer = new Layer(null, data.size, data.options)\r\n        layer.size = data.size\r\n        layer.weight = Matrix.load(data.weight)\r\n        layer.weightTransposed = layer.weight.transpose()\r\n        layer.bias = Matrix.load(data.bias)\r\n        layer.options = data.options\r\n        layer.clear()\r\n        return layer\r\n    }\r\n\r\n    save() {\r\n        const data = {\r\n            size: this.size,\r\n            options: this.options,\r\n            weight: this.weight.save(),\r\n            bias: this.bias.save(),\r\n        }\r\n        return data\r\n    }\r\n\r\n    feedforward(input, previous, next, context = null) {\r\n        if (!previous) {\r\n            this.output = input\r\n            this.activation = input\r\n        } else {\r\n            this.output = this.weight.product(input).add(this.bias)\r\n            this.activation = this.output.map(this.activationFunctions.x)\r\n        }\r\n        return this.activation\r\n    }\r\n\r\n    backpropagate(derivative, previous, next, context = null) {\r\n        if (!previous) {\r\n            return derivative\r\n        }\r\n\r\n        if (this.activationFunctions.z) {\r\n            this.derivative = derivative.multiply(this.output.map(this.activationFunctions.z))\r\n        } else {\r\n            this.derivative = derivative.multiply(this.activation.map(this.activationFunctions.y))\r\n        }\r\n\r\n        const gradient = this.derivative.multiply(-context.learningRate)\r\n        const weightGradient = gradient.product(previous.activation.transpose())\r\n\r\n        this.gradientCount++\r\n        this.weightGradientSum = this.weightGradientSum.add(weightGradient)\r\n        this.biasGradientSum = this.biasGradientSum.add(gradient)\r\n\r\n        // Distribute error to previous layer\r\n        return this.weightTransposed.product(this.derivative)\r\n    }\r\n\r\n    adjust(previous, next, context = null) {\r\n        if (!previous) {\r\n            return\r\n        }\r\n\r\n        let avg\r\n\r\n        avg = this.weightGradientSum.multiply(1 / this.gradientCount)\r\n        this.weight = this.weight.add(avg)\r\n        this.weightTransposed = this.weight.transpose()\r\n\r\n        avg = this.biasGradientSum.multiply(1 / this.gradientCount)\r\n        this.bias = this.bias.add(avg)\r\n\r\n        this.clear()        \r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/Layer.js","import withCanvas from 'withCanvas'\r\n\r\nexport default class LineGraph {\r\n    constructor(container, options = null) {\r\n        this.options = {\r\n            gridInterval: .1,\r\n            maxScaleX: 3,\r\n            max: 1,\r\n            autoMax: true,\r\n            ...options,\r\n        }\r\n\r\n        this.max = this.options.max\r\n        this.series = {}\r\n\r\n        this.props = withCanvas(container, this)\r\n        this.start = () => this.props.start()\r\n        this.stop = () => this.props.stop()\r\n        this.draw = () => this.props.draw()\r\n    }\r\n\r\n    addSerie(name, options = null) {\r\n        this.props.context.font = '13px sans-serif'\r\n        const labelWidth = this.props.context.measureText(name).width\r\n        const serie = {\r\n            name,\r\n            data: [],\r\n            color: '0, 0, 0',\r\n            labelWidth,\r\n            ...this.options,\r\n            ...options,\r\n        }\r\n        this.series[name] = serie\r\n        return this\r\n    }\r\n\r\n    addDatapoint(datapoint, serieName = 'default') {\r\n        if (this.options.autoMax) {\r\n            this.max = Math.max(this.max, datapoint)\r\n        }\r\n\r\n        if (!this.series[serieName]) {\r\n            this.addSerie(serieName)\r\n        }\r\n        const serie = this.series[serieName]\r\n        serie.data.push(datapoint)\r\n        const width = this.props.canvas.width\r\n        const scaleX = Math.max(width, serie.data.length) / width\r\n        if (scaleX > this.options.maxScaleX) {\r\n            serie.data.shift()\r\n        }\r\n    }\r\n\r\n    mouseWheel({event}) {\r\n        event.preventDefault()\r\n        const scale = event.deltaY > 0 ? 1.1 : .9\r\n        this.max = Math.max(this.max * scale, .1)\r\n        this.draw()\r\n    }\r\n\r\n    render({canvas, context, map}) {\r\n        context.clearRect(0, 0, canvas.width, canvas.height)\r\n        context.font = '13px sans-serif'\r\n        const valueWidth = context.measureText('000.0000').width\r\n\r\n        // Grid lines\r\n        if (this.max != 0) {\r\n            const gridLineInterval = Math.max(Math.round(this.max) / 20, .05)\r\n            const gridLines = this.max / gridLineInterval\r\n            context.strokeStyle = '#eee'\r\n            context.fillStyle = '#ccc'\r\n            context.beginPath()\r\n            for (let i = 0; i <= gridLines; i++) {\r\n                const y = map(i * gridLineInterval, 0, this.max, canvas.height - 1, 0)\r\n                context.moveTo(0, y)\r\n\r\n                if (i > 0 && i < gridLines) {\r\n                    const label = (i * gridLineInterval).toFixed(2)\r\n                    const labelWidth = context.measureText(label).width\r\n                    const labelX = canvas.width/2 - labelWidth/2\r\n                    const labelY = y + 4\r\n                    context.clearRect(labelX, y-1, labelWidth, 2)\r\n                    context.fillText(label, labelX, labelY)\r\n\r\n                    context.lineTo(labelX - 4, y)\r\n                    context.moveTo(labelX + labelWidth + 4, y)\r\n                }\r\n\r\n                context.lineTo(canvas.width, y)\r\n            }\r\n            context.stroke()\r\n        }\r\n\r\n        const lineWidth = 50\r\n        const labelHeight = 18\r\n        let serieIndex = 0\r\n\r\n        context.fillStyle = '#000'\r\n        for (let serieName of Object.keys(this.series)) {\r\n            const serie = this.series[serieName]\r\n\r\n            const labelPos =  {\r\n                x: canvas.width - serie.labelWidth - 4 - valueWidth - 4 - lineWidth - 16,\r\n                y: 24 + labelHeight * serieIndex\r\n            }\r\n            const valuePos = {\r\n                x: canvas.width - valueWidth - 4 - lineWidth - 16,\r\n                y: labelPos.y\r\n            }\r\n            const linePos = {\r\n                x: canvas.width - lineWidth - 16,\r\n                y: labelPos.y - 6\r\n            }\r\n\r\n            context.fillText(serie.name, labelPos.x, labelPos.y - 1)\r\n            if (serie.data.length) {\r\n                context.fillText(serie.data[serie.data.length - 1].toFixed(4).padStart(8), valuePos.x, valuePos.y - 1)\r\n            }\r\n\r\n            context.strokeStyle = `rgb(${serie.color})`\r\n            context.beginPath()\r\n            context.moveTo(linePos.x, linePos.y)\r\n            context.lineTo(linePos.x + lineWidth, linePos.y)\r\n            context.moveTo(0, 0)\r\n            for (let i = 0; i < serie.data.length; i++) {\r\n                const x = map(i, 0, Math.max(serie.data.length, canvas.width - 1), 0, canvas.width - 1)\r\n                const y = map(serie.data[i], 0, this.max, canvas.height - 1, 0)\r\n                context.lineTo(x, y)\r\n            }\r\n            context.stroke()\r\n\r\n            serieIndex++\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/visual/LineGraph.js","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\r\n\r\nexport default function withCanvas(id) {\r\n    var scene = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\r\n    var container = document.getElementById(id);\r\n    if (!container) {\r\n        throw new Error('Unknown element #' + id);\r\n    }\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext(\"2d\");\r\n    var props = void 0;\r\n    var animationFrame = void 0;\r\n\r\n    function resize() {\r\n        var _scene$options = scene.options,\r\n            height = _scene$options.height,\r\n            width = _scene$options.width;\r\n\r\n\r\n        canvas.height = height || container.offsetHeight;\r\n        canvas.width = width || container.offsetWidth;\r\n        return props;\r\n    }\r\n\r\n    function draw(ms) {\r\n        ms = ms || performance.now();\r\n\r\n        props.delta = props.time ? ms - props.time : 0;\r\n        props.time = ms;\r\n\r\n        scene.render && scene.render(props);\r\n\r\n        props.running && window.requestAnimationFrame(draw);\r\n        return props;\r\n    }\r\n\r\n    function start() {\r\n        props.running = true;\r\n        animationFrame = window.requestAnimationFrame(draw);\r\n        return props;\r\n    }\r\n\r\n    function stop() {\r\n        props.running = false;\r\n        window.cancelAnimationFrame(animationFrame);\r\n        return props;\r\n    }\r\n\r\n    function constrain(value, min, max) {\r\n        return Math.max(min, Math.min(max, value));\r\n    }\r\n\r\n    function map(value, minIn, maxIn, minOut, maxOut) {\r\n        return (value - minIn) / (maxIn - minIn) * (maxOut - minOut) + minOut;\r\n    }\r\n\r\n    function eventHandler(name) {\r\n        return function (event) {\r\n            return scene[name] && scene[name](_extends({}, props, { event: event }));\r\n        };\r\n    }\r\n\r\n    document.addEventListener('resize', function (event) {\r\n        resize();scene.resize && scene.resize(_extends({}, props, { event: event }));\r\n    });\r\n    document.addEventListener('keydown', eventHandler('keyDown'));\r\n    document.addEventListener('keyup', eventHandler('keyUp'));\r\n    canvas.addEventListener('mousedown', eventHandler('mouseDown'));\r\n    canvas.addEventListener('mouseup', eventHandler('mouseUp'));\r\n    canvas.addEventListener('mousemove', eventHandler('mouseMove'));\r\n    canvas.addEventListener('mousewheel', eventHandler('mouseWheel'));\r\n\r\n    props = {\r\n        scene: scene,\r\n        container: container,\r\n        canvas: canvas,\r\n        context: context,\r\n        draw: draw,\r\n        start: start,\r\n        stop: stop,\r\n        constrain: constrain,\r\n        map: map\r\n    };\r\n\r\n    resize();\r\n    scene.init && scene.init(props);\r\n    draw();\r\n\r\n    container.appendChild(canvas);\r\n\r\n    return props;\r\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/withCanvas/es/index.js\n// module id = 4\n// module chunks = 0","// Core\r\nimport ActivationFunctions from './ActivationFunctions'\r\nimport AsyncRunner from './AsyncRunner'\r\nimport Layer from './Layer'\r\nimport Matrix from './Matrix'\r\nimport NeuralNetwork from './NeuralNetwork'\r\n\r\n// Visuals\r\nimport LineGraph from './visual/LineGraph'\r\nimport NetworkProgress from './visual/NetworkProgress'\r\nimport NetworkFlowChart from './visual/NetworkFlowChart'\r\nimport TwoInOneOut from './visual/TwoInOneOut'\r\n\r\nexport default {\r\n    // Core\r\n    ActivationFunctions,\r\n    AsyncRunner,\r\n    Layer,\r\n    Matrix,\r\n    NeuralNetwork,\r\n\r\n    // Visuals\r\n    LineGraph,\r\n    NetworkProgress,\r\n    NetworkFlowChart,\r\n    TwoInOneOut,\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/**\r\n * Run neural network via browser's requestAnimationFrame and attempt to stay\r\n * responsive.\r\n */\r\nexport default class AsyncRunner {\r\n    constructor(net, options) {\r\n        this.net = net\r\n        net.options.auto = false\r\n        this.options = {\r\n            fps: 30,\r\n            progressInterval: 1000,\r\n            ...options,\r\n        }\r\n\r\n        this.frameInterval = 1000 / this.options.fps\r\n        this.iterations = 1\r\n        this.loopTimeStart = 0\r\n        this.loopTimeLast = 0\r\n        this.loopStep = this.loopStep.bind(this)\r\n    }\r\n\r\n    start() {\r\n        this.running = true\r\n        this.loopStep()\r\n        return this\r\n    }\r\n\r\n    stop() {\r\n        this.running = false\r\n        return this\r\n    }\r\n\r\n    loopStep(now) {\r\n        this.now = now\r\n        if (!this.loopTimeStart) {\r\n            this.loopTimeStart = now\r\n            this.loopTimeLast = now\r\n        }\r\n        const delta = now - this.loopTimeLast\r\n        const net = this.net\r\n\r\n        if (this.net.canStep()) {\r\n            this.iterations *= delta < this.frameInterval ? 1.1 : 0.9\r\n            this.iterations = Math.max(1, this.iterations)\r\n            let i = Math.floor(this.iterations)\r\n            while (i-- && net.step()) {}\r\n\r\n            this.loopProgress(net.training, now, delta)\r\n            this.loopProgress(net.testing, now, delta)\r\n        }\r\n\r\n        this.loopTimeLast = now\r\n        if (this.running) {\r\n            window.requestAnimationFrame(this.loopStep)\r\n        }\r\n    }\r\n\r\n    loopProgress(context) {\r\n        if (this.net.canStepContext(context) && this.now > (context.progressDeadline || 0)) {\r\n            context.progressDeadline = this.now + context.progressInterval\r\n            context.onProgress && context.onProgress(context)\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/AsyncRunner.js","import Matrix from './Matrix'\r\nimport Layer from './Layer'\r\n\r\nexport default class NeuralNetwork {\r\n    constructor(options) {\r\n        this.options = {\r\n            epochs: 0,\r\n            batchSize: 0,\r\n            learningRate: .03,\r\n            auto: true,\r\n            ...options,\r\n        }\r\n        this.training = {}\r\n        this.testing = {}\r\n        this.layers = []\r\n        this.layers.map(layer => layer.clear())\r\n    }\r\n\r\n    static load(data) {\r\n        const net = new NeuralNetwork(data.options)\r\n        net.layers = data.layers.map(layer => Layer.load(layer))\r\n        return net\r\n    }\r\n\r\n    save() {\r\n        return {\r\n            options: this.options,\r\n            layers: this.layers.map(layer => layer.save()),\r\n        }\r\n    }\r\n\r\n    addLayer(size, options = null) {\r\n        options = {\r\n            ...this.options,\r\n            ...options\r\n        }\r\n        const previous = this.layers.length ? this.layers[this.layers.length - 1] : null\r\n        const layer = new Layer(previous, size, options)\r\n        this.layers.push(layer)\r\n        return this\r\n    }\r\n\r\n    getLayers(i) {\r\n        return {\r\n            previous: i > 0 ? this.layers[i - 1] : null,\r\n            current: this.layers[i],\r\n            next: i < this.layers.length - 1 ? this.layers[i + 1] : null,\r\n        }\r\n    }\r\n\r\n    predict(input) {\r\n        return this.feedforward(input)\r\n    }\r\n\r\n    train(samples, options = null) {\r\n        this.startContext(this.training, samples, {\r\n            backpropagate: true,\r\n            ...options,\r\n        })\r\n\r\n        if (this.training.auto) {\r\n            while (!this.stepContext(this.training).endOfContext) {}\r\n        }\r\n        return this\r\n    }\r\n\r\n    test(samples, options = null) {\r\n        this.startContext(this.testing, samples, {\r\n            epochs: 1,\r\n            backpropagate: false,\r\n            ...options,\r\n        })\r\n\r\n        if (this.testing.auto) {\r\n            while (!this.stepContext(this.testing).endOfContext) {}\r\n        }\r\n        return this\r\n    }\r\n\r\n    step() {\r\n        if (this.canStepContext(this.testing)) {\r\n            this.stepContext(this.testing)\r\n        } else if (this.canStepContext(this.training)) {\r\n            this.stepContext(this.training)\r\n        }\r\n\r\n        return this.canStep()\r\n    }\r\n\r\n    startContext(context, samples, options = null) {\r\n        options = {\r\n            ...this.options,\r\n            ...options,\r\n        }\r\n\r\n        Object.assign(context, options)\r\n\r\n        context.ready = true\r\n        context.sample = 0\r\n        context.sampleCount = samples.length\r\n        context.samples = samples.sort(() => .5 - Math.random())\r\n        context.evaluation = 0\r\n        context.batchSize = options.batchSize || context.samples.length\r\n        context.batch = 0\r\n        context.batchEvaluation = 0\r\n        context.batchError = 0\r\n        context.batchErrorSum = null\r\n        context.batchAccuracy = 0\r\n        context.batchAccuracyCount = 0\r\n        context.epoch = 0\r\n        context.epochEvaluation = 0\r\n        context.epochError = 0\r\n        context.epochErrorSum = null\r\n        context.epochAccuracy = 0\r\n        context.epochAccuracyCount = 0\r\n        context.endOfBatch = false\r\n        context.endOfEpoch = false\r\n        context.endOfContext = false\r\n\r\n        context.onStart && context.onStart(context)\r\n    }\r\n\r\n    stepContext(context) {\r\n        if (this.canStepContext(context)) {\r\n            const sample = context.samples[context.sample]\r\n            const activation = this.feedforward(sample.input, context)\r\n            const error = sample.target.subtract(activation).map(v => v * v)\r\n            let derivative = null\r\n            if (context.backpropagate) {\r\n                derivative = activation.subtract(sample.target)\r\n                this.backpropagate(derivative, context)\r\n            }\r\n\r\n            if (context.onEvaluate) {\r\n                const correct = context.onEvaluate(context, sample, activation, error, derivative)\r\n                context.batchAccuracyCount += correct\r\n                context.epochAccuracyCount += correct\r\n            }\r\n\r\n            context.sample++\r\n            context.evaluation++\r\n            context.batchEvaluation++\r\n            context.epochEvaluation++\r\n            context.batchErrorSum = context.batchErrorSum ? context.batchErrorSum.add(error) : error\r\n            context.epochErrorSum = context.epochErrorSum ? context.epochErrorSum.add(error) : error\r\n            \r\n            context.endOfEpoch = context.sample === context.sampleCount\r\n            context.endOfBatch = context.endOfEpoch || context.sample % context.batchSize === 0\r\n            context.endOfContext = context.endOfEpoch && context.epochs != 0 && context.epoch === context.epochs - 1\r\n\r\n            if (context.endOfBatch) {\r\n                if (context.backpropagate) {\r\n                    this.adjust(context)\r\n                }\r\n\r\n                context.batchError = context.batchErrorSum.reduce((c, v) => c + v / context.batchEvaluation, 0)\r\n                context.batchAccuracy = context.batchAccuracyCount / context.batchEvaluation\r\n\r\n                context.onBatch && context.onBatch(context)\r\n\r\n                context.batch++\r\n                context.batchEvaluation = 0\r\n                context.batchErrorSum = 0\r\n                context.batchAccuracyCount = 0\r\n            }\r\n\r\n            if (context.endOfEpoch) {\r\n                context.epochError = context.epochErrorSum.reduce((c, v) => c + v / context.epochEvaluation, 0)\r\n                context.epochAccuracy = context.epochAccuracyCount / context.epochEvaluation\r\n\r\n                context.onEpoch && context.onEpoch(context)\r\n\r\n                context.epoch++\r\n                context.epochEvaluation = 0\r\n                context.epochErrorSum = 0\r\n                context.epochAccuracyCount = 0\r\n\r\n                context.sample = 0\r\n                context.samples.sort(() => .5 - Math.random())\r\n            }\r\n\r\n            if (context.endOfContext) {\r\n                context.onComplete && context.onComplete(context)\r\n            }\r\n        }\r\n\r\n        return context\r\n    }\r\n\r\n    canStep() {\r\n        return this.canStepContext(this.training) || this.canStepContext(this.testing)\r\n    }\r\n\r\n    canStepContext(context) {\r\n        return context.ready && !context.endOfContext\r\n    }\r\n\r\n    feedforward(input, context = null) {\r\n        let activation = input\r\n        for (let i = 0; i < this.layers.length; i++) {\r\n            const {previous, current, next} = this.getLayers(i)\r\n            activation = current.feedforward(activation, previous, next, context)\r\n        }\r\n        return activation\r\n    }\r\n\r\n    backpropagate(derivative, context = null) {\r\n        for (let i = this.layers.length - 1; i >= 0; i--) {\r\n            const {previous, current, next} = this.getLayers(i)\r\n            derivative = current.backpropagate(derivative, previous, next, context)\r\n        }\r\n        return derivative\r\n    }\r\n\r\n    adjust(context = null) {\r\n        for (let i = 0; i < this.layers.length; i++) {\r\n            const {previous, current, next} = this.getLayers(i)\r\n            current.adjust(previous, next, context)\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/NeuralNetwork.js","import LineGraph from './LineGraph'\r\n\r\nexport default class NetworkProgress {\r\n    constructor(net, container) {\r\n        this.net = net\r\n        this.container = document.getElementById(container)\r\n\r\n        this.statsContainer = document.createElement('div')\r\n        this.statsContainer.id = container + '-stats'\r\n        this.container.appendChild(this.statsContainer)\r\n\r\n        this.graphContainer = document.createElement('div')\r\n        this.graphContainer.id = container + '-graph'\r\n        this.container.appendChild(this.graphContainer)\r\n\r\n        this.graph = new LineGraph(this.graphContainer.id)\r\n        .addSerie('Train batch cost', {color: '150, 150, 150'})\r\n        .addSerie('Train batch error', {color: '150, 150, 255'})\r\n        .addSerie('Train epoch cost', {color: '0, 0, 0'})\r\n        .addSerie('Train epoch error', {color: '0, 0, 255'})\r\n        .addSerie('Test epoch cost', {color: '255, 0, 0'})\r\n        .addSerie('Test epoch error', {color: '0, 175, 0'})\r\n    }\r\n\r\n    step() {\r\n        const graph = this.graph\r\n        const {\r\n            training,\r\n            testing\r\n        } = this.net\r\n\r\n        const format = (v, d = 4) => (v || 0).toFixed(d)\r\n\r\n        const epoch = format(training.evaluation / training.sampleCount, 2)\r\n        const batch = format(training.evaluation / training.batchSize, 0)\r\n        const evaluation = format(training.evaluation, 0)\r\n        const trainingAccuracy = format(training.epochAccuracy)\r\n        const testingAccuracy = format(testing.epochAccuracy)\r\n\r\n        this.statsContainer.innerHTML = `\r\n            <ul>\r\n                <li class=\"stat training epoch\"><div class=\"name\">Epoch</div><div class=\"value\">${epoch}</div></li>\r\n                <li class=\"stat training batch\"><div class=\"name\">Batch</div><div class=\"value\">${batch}</div></li>\r\n                <li class=\"stat training evaluation\"><div class=\"name\">Evaluation</div><div class=\"value\">${evaluation}</div></li>\r\n                <li class=\"stat training accuracy\"><div class=\"name\">Training accuracy</div><div class=\"value\">${trainingAccuracy}</div></li>\r\n                <li class=\"stat testing accuracy\"><div class=\"name\">Testing accuracy</div><div class=\"value\">${testingAccuracy}</div></li>\r\n            </ul>\r\n        `\r\n\r\n        if (training.ready) {\r\n            graph.addDatapoint(training.batchError, 'Train batch cost')\r\n            graph.addDatapoint(1 - training.batchAccuracy, 'Train batch error')\r\n            if (training.epochError) {\r\n                graph.addDatapoint(training.epochError, 'Train epoch cost')\r\n                graph.addDatapoint(1 - training.epochAccuracy, 'Train epoch error')\r\n            }\r\n        }\r\n\r\n        if (testing.ready) {\r\n            if (testing.epochError) {\r\n                graph.addDatapoint(testing.epochError, 'Test epoch cost')\r\n                graph.addDatapoint(1 - testing.epochAccuracy, 'Test epoch error')\r\n            }\r\n        }\r\n\r\n        if (!graph.props.running) {\r\n            graph.draw()\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/visual/NetworkProgress.js","import mermaid from 'mermaid'\r\n\r\n/**\r\n * Renders a NeuralNetwork as a mermaid flowchart.\r\n */\r\nexport default class NetworkFlowChart {\r\n    constructor(net, container = null, options = null) {\r\n        this.options = {\r\n            verbose: false,\r\n            ...options\r\n        }\r\n        this.container = container && document.getElementById(container)\r\n        this.net = net\r\n    }\r\n\r\n    render() {\r\n        this.container.innerHTML = ''\r\n        this.renderSvg(svg => {\r\n            this.container.innerHTML = svg\r\n        })\r\n    }\r\n\r\n    renderSvg(callback) {\r\n        if (!mermaid) {\r\n            throw new Error('Load mermaid to use NetworkGraphVisual')\r\n        }\r\n\r\n        const hex2 = x => (Math.round(x) < 16 ? '0' : '') + Math.round(x).toString(16).substr(-2)\r\n        const color = x => '#' + (Math.abs(x) < .1 ? 'bbbbbb' : x < 0 ? 'bb5555' : '55bb55') + hex2(Math.min(Math.abs(x * 100), 200) + 55)\r\n        const width = x => Math.min(Math.max(1, Math.abs(x * 5)), 15)\r\n        const number = (x, prefix = '&nbsp;') => (x < 0 ? '' : prefix) + x.toFixed(4)\r\n        let links = 0\r\n        let g = ['graph LR']\r\n        for (let layer = 0; layer < this.net.layers.length; layer++) {\r\n            const {previous, current, next} = this.net.getLayers(layer)\r\n            const previousSize = previous ? previous.size : current.size\r\n            for (let input = 0; input < previousSize; input++) {\r\n                if (!previous) {\r\n                    let x = current.activation ? current.activation.data[input][0] : 0\r\n                    g.push(layer + '' + input + '[\">:' + number(x) + '\"]')\r\n                    g.push('style ' + layer + '' + input + ' fill:' + color(x) + ',stroke:' + color(x))\r\n                } else {\r\n                    for (let output = 0; output < current.size; output++) {\r\n                        let w = current.weight.data[output][input]\r\n                        let b = current.bias.data[output][0]\r\n                        let gw = current.gradientCount ? current.weightGradientSum.data[output][input] : 0\r\n                        let gb = current.gradientCount ? current.biasGradientSum.data[output][0] : 0\r\n                        let o = current.output ? current.output.data[output][0] : 0\r\n                        let a = current.activation ? current.activation.data[output][0] : 0\r\n                        let e = current.error ? current.error.data[output][0] : 0\r\n                        let d = current.derivative ? current.derivative.data[output][0] : 0\r\n\r\n                        let edge = number(w, ' ')\r\n                        let node = number(b)\r\n\r\n                        if (this.options.verbose) {\r\n                            edge = \r\n                                'W:' + number(w, ' ') + '<br>' +\r\n                                '^:' + number(gw, ' ')\r\n                            node =\r\n                                '<br>' +\r\n                                '<br>' +\r\n                                'B:' + number(b) + '<br>' +\r\n                                '^:' + number(gb) + '<br><br>' +\r\n                                'O:' + number(o) + '<br>' +\r\n                                '>:' + number(a) + '<br><br>' +\r\n                                'E:' + number(e) + '<br>' +\r\n                                '<:' + number(d)\r\n                        }\r\n\r\n                        g.push((layer-1) + '' + input + ' ---|\"' + edge + '\"| ' + layer + '' + output + '((\"' + node + '\"))')\r\n                        g.push('style ' + layer + '' + output + ' fill:' + color(a) + ',stroke:' + color(b) + ',stroke-width:' + width(b))\r\n                        g.push('linkStyle ' + links++ + ' stroke:' + color(w) + ',stroke-width:' + width(w))\r\n                    }\r\n                }\r\n\r\n                g.push('')\r\n            }\r\n        }\r\n\r\n        mermaid.mermaidAPI.render('flowChart-svg', g.join('\\n'), svg => {\r\n            svg = svg.replace('</style><g', '</style><style>#flowchart-svg .label{font-family: monospace;}</style><g')\r\n            callback && callback(svg)\r\n        })\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/visual/NetworkFlowChart.js","module.exports = __WEBPACK_EXTERNAL_MODULE_11__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"mermaid\",\"commonjs2\":\"mermaid\",\"commonjs\":\"mermaid\",\"amd\":\"mermaid\"}\n// module id = 11\n// module chunks = 0","import withCanvas from 'withCanvas'\r\nimport Matrix from '../Matrix'\r\n\r\n/**\r\n * Render a grid by representing the two inputs as coordinates, and the output\r\n * as color. Coordinate system is oriented as the HTML system.\r\n */\r\nexport default class TwoInOneOut {\r\n    constructor(net, container, options = null) {\r\n        this.options = {\r\n            range: [0, 1],\r\n            outputRange: [0, 1],\r\n            minColor: '0, 0, 0',\r\n            maxColor: '255, 255, 255',\r\n        }\r\n        \r\n        this.net = net\r\n        this.steps = 10\r\n        this.screenSize = 200\r\n        this.screenStepSize = this.screenSize / this.steps\r\n\r\n        this.props = withCanvas(container, this)\r\n        this.start = () => this.props.start()\r\n        this.stop = () => this.props.stop()\r\n        this.draw = () => this.props.draw()\r\n    }\r\n\r\n    init({map}) {\r\n        this.input = x => map(x, 0, this.steps - 1, this.options.range[0], this.options.range[1])\r\n        this.output = x => map(x, this.options.outputRange[0], this.options.outputRange[1], 0, 1)\r\n        this.screen = x => map(x, 0, this.steps, 0, this.screenSize)\r\n    }\r\n\r\n    render({canvas, context}) {\r\n        context.fillStyle = `rgb(${this.options.minColor})`\r\n        context.fillRect(0, 0, canvas.width, canvas.height)\r\n\r\n        for (let y = 0; y < this.steps; y++) {\r\n            for (let x = 0; x < this.steps; x++) {\r\n                let result = this.net.predict(Matrix.fromArray([this.input(x), this.input(y)]))\r\n                let output = this.output(result.toArray()[0])\r\n                context.fillStyle = `rgba(${this.options.maxColor}, ${output})`\r\n                context.fillRect(this.screen(x), this.screen(y), this.screenStepSize, this.screenStepSize)\r\n            }\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/visual/TwoInOneOut.js"],"sourceRoot":""}